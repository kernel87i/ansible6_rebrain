---
# tasks file for deploy_nginx

- name: Install Nginx web server
  yum:
    name: nginx
    state: latest

- name: Removing default nginx
  file:
    path: /etc/nginx/nginx.conf
    state: absent

- name: Adding nginx configuration
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0644
  notify: Reload Nginx


- name: Adding site configuration
  template:
    src: site.conf.j2
    dest: /etc/nginx/conf.d/site.conf
    owner: root
    group: root
    mode: 0644
  notify: Reload Nginx


- name: Copy file index example  with owner and permissions
  copy:
    src: "{{ item }}"
    dest: "{{ root_directory }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - "index.site1.html"
    - "index.site2.html"
  notify: Reload Nginx

- name: Start Nginx
  service:
    name: nginx
    state: started
    enabled: yes

- name: Install depends
  yum:
    name: "{{ item }}"
    state: latest
  loop:
    - python
    - python-devel
    - gcc
    - dialog
    - ca-certificates
    - python-pip
    - python-virtualenv
    - git

- name: create letsencrypt directory
  file:
    name: /opt/certbot
    state: directory


- name: Install Certbot's Nginx package
  yum:
   name: python-certbot-nginx
   state: present

- name: Lets Encrypt client
  git: 
    dest: /opt/certbot
    clone: yes
    repo: https://github.com/certbot/certbot
    force: yes

- name: Generate new certificate if one doesn't exist.
  shell: ./certbot-auto certonly  --webroot  --email "{{certbot_admin_email}}" --agree-tos --webroot-path=/usr/share/nginx/html -d "{{ domain_name1}}";
  args:
    chdir: /opt/certbot

- name: Add crontab to renew certificates
  cron:
    minute: "05"
    hour: "1"
    weekday: "1"
    job: "/opt/certbot/certbot-auto renew >> /var/log/le-renew.log"

- name: Add crontab to reload server
  cron:
    minute: "10"
    hour: "1"
    weekday: "1"
    job: "/etc/init.d/nginx reload"


- name: Port forwarding virtual host  firewalld
  firewalld:
    port: 80/tcp
    permanent: yes
    state: enabled

